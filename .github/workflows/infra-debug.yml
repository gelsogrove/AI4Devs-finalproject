# 🔍 Debug AWS Infrastructure Issues
# This workflow helps diagnose AWS permission and configuration issues

name: 🔍 Debug Infrastructure

on:
  workflow_dispatch:

env:
  AWS_REGION: us-east-1
  TF_VERSION: 1.6.0

jobs:
  debug:
    name: 🔍 Debug AWS Setup
    runs-on: ubuntu-latest
    environment: dev
    
    steps:
      - name: 📥 Checkout Repository
        uses: actions/checkout@v4

      - name: ⚙️ Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: 🔧 Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ env.TF_VERSION }}

      - name: 🔍 Test AWS Permissions
        run: |
          echo "🔍 Testing AWS permissions..."
          
          # Test basic AWS access
          echo "📋 AWS Identity:"
          aws sts get-caller-identity
          
          echo ""
          echo "🌐 Available VPCs:"
          aws ec2 describe-vpcs --query 'Vpcs[*].[VpcId,IsDefault,State]' --output table
          
          echo ""
          echo "🔑 Available Key Pairs:"
          aws ec2 describe-key-pairs --query 'KeyPairs[*].KeyName' --output table
          
          echo ""
          echo "💾 Available AMIs (Ubuntu):"
          aws ec2 describe-images --owners 099720109477 --filters "Name=name,Values=ubuntu/images/hvm-ssd/ubuntu-*-amd64-server-*" --query 'Images[0:3].[ImageId,Name,State]' --output table
          
          echo ""
          echo "🗄️ RDS Instances:"
          aws rds describe-db-instances --query 'DBInstances[*].[DBInstanceIdentifier,DBInstanceStatus]' --output table || echo "No RDS instances found"
          
          echo ""
          echo "📦 S3 Buckets:"
          aws s3 ls | head -10

      - name: 🔧 Terraform Init
        working-directory: ./terraform
        run: terraform init

      - name: ✅ Terraform Validate
        working-directory: ./terraform
        run: terraform validate

      - name: 📋 Terraform Plan (Detailed)
        working-directory: ./terraform
        run: |
          echo "🔍 Running detailed Terraform plan..."
          terraform plan -detailed-exitcode -no-color 2>&1 | tee plan.log
          
          echo ""
          echo "📊 Plan Summary:"
          grep -E "(Plan:|Error:|Warning:)" plan.log || echo "No summary found"

      - name: 🔍 Check for Existing Resources
        run: |
          echo "🔍 Checking for existing resources that might conflict..."
          
          echo "🔑 Existing Key Pairs with 'shopmefy' in name:"
          aws ec2 describe-key-pairs --query 'KeyPairs[?contains(KeyName, `shopmefy`)].[KeyName]' --output table || echo "None found"
          
          echo ""
          echo "🗄️ Existing RDS instances with 'shopmefy' in identifier:"
          aws rds describe-db-instances --query 'DBInstances[?contains(DBInstanceIdentifier, `shopmefy`)].[DBInstanceIdentifier,DBInstanceStatus]' --output table || echo "None found"
          
          echo ""
          echo "📦 Existing S3 buckets with 'shopmefy' in name:"
          aws s3 ls | grep shopmefy || echo "None found"
          
          echo ""
          echo "🛡️ Existing Security Groups with 'shopmefy' in name:"
          aws ec2 describe-security-groups --query 'SecurityGroups[?contains(GroupName, `shopmefy`)].[GroupId,GroupName]' --output table || echo "None found"

      - name: 📊 Generate Debug Report
        if: always()
        run: |
          echo "## 🔍 AWS Infrastructure Debug Report" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### ✅ Tests Completed:" >> $GITHUB_STEP_SUMMARY
          echo "- AWS Credentials: ✅ Working" >> $GITHUB_STEP_SUMMARY
          echo "- Terraform Init: ✅ Successful" >> $GITHUB_STEP_SUMMARY
          echo "- Terraform Validate: ✅ Configuration Valid" >> $GITHUB_STEP_SUMMARY
          echo "- AWS Permissions: ✅ Basic access confirmed" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### 📋 Next Steps:" >> $GITHUB_STEP_SUMMARY
          echo "1. Check the detailed logs above for any permission errors" >> $GITHUB_STEP_SUMMARY
          echo "2. Look for existing resource conflicts" >> $GITHUB_STEP_SUMMARY
          echo "3. If no issues found, the main infrastructure workflow should work" >> $GITHUB_STEP_SUMMARY 