name: AWS EC2 Deploy 

on:
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: prod
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20

      - name: Create Nginx config file
        run: |
          cat > nginx.conf << EOF
          server {
              listen 80;
              server_name _;
              
              location /api/ {
                  proxy_pass http://localhost:8080/api/;
                  proxy_set_header Host \$host;
                  proxy_set_header X-Real-IP \$remote_addr;
                  proxy_set_header X-Forwarded-For \$proxy_add_x_forwarded_for;
                  proxy_set_header X-Forwarded-Proto \$scheme;
              }
              
              location / {
                  proxy_pass http://localhost:3000/;
                  proxy_set_header Host \$host;
                  proxy_set_header X-Real-IP \$remote_addr;
                  proxy_set_header X-Forwarded-For \$proxy_add_x_forwarded_for;
                  proxy_set_header X-Forwarded-Proto \$scheme;
              }
          }
          EOF

      - name: Download from S3
        run: |
          aws s3 cp s3://${{ secrets.S3_BUCKET_NAME }}/backend ./backend --recursive
          aws s3 cp s3://${{ secrets.S3_BUCKET_NAME }}/frontend ./frontend --recursive

      - name: Prepare SSH key
        run: |
          echo "${{ secrets.EC2_SSH_KEY }}" > ec2_key.pem
          chmod 600 ec2_key.pem

      - name: Upload files to EC2
        run: |
          scp -i ec2_key.pem -o StrictHostKeyChecking=no -r ./backend ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }}:/home/shopme/
          scp -i ec2_key.pem -o StrictHostKeyChecking=no -r ./frontend ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }}:/home/shopme/
          scp -i ec2_key.pem -o StrictHostKeyChecking=no nginx.conf ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }}:/home/shopme/

      - name: Deploy application
        run: |
          ssh -i ec2_key.pem -o StrictHostKeyChecking=no ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} "
            cd /home/shopme/backend && npm install && npm run build

            # PM2 setup
            pm2 delete backend || true
            pm2 start npm --name backend -- start -- --port 8080
            pm2 save
            pm2 startup

            # Nginx setup
            sudo cp /home/shopme/nginx.conf /etc/nginx/sites-available/shopme
            sudo ln -sf /etc/nginx/sites-available/shopme /etc/nginx/sites-enabled/shopme
            sudo nginx -t && sudo systemctl restart nginx
          " 