name: 🔍 PR Checks - Required for Merge

on:
  pull_request:
    branches: [main]
  workflow_dispatch:

jobs:
  backend-tests:
    name: Backend Tests
    runs-on: ubuntu-latest
    environment: dev
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'
          cache-dependency-path: backend/package-lock.json

      - name: Start PostgreSQL
        run: |
          docker compose up -d db
          timeout 60s bash -c 'until docker compose exec -T db pg_isready -U shopmefy; do sleep 2; done'

      - name: Install backend dependencies
        working-directory: ./backend
        run: npm ci --prefer-offline --no-audit --legacy-peer-deps

      - name: Create backend .env file
        working-directory: ./backend
        run: |
          echo "DATABASE_URL=postgresql://shopmefy:shopmefy@localhost:5434/shopmefy" > .env
          echo "OPENROUTER_API_KEY=${{ secrets.OPENROUTER_API_KEY || 'test-key' }}" >> .env
          echo "NODE_ENV=test" >> .env
          echo "JWT_SECRET=test-jwt-secret-for-ci" >> .env
          echo "PORT=3001" >> .env

      - name: Setup database
        working-directory: ./backend
        run: |
          npx prisma generate
          npx prisma db push --accept-data-loss --force-reset
          npx prisma db seed

      - name: Build backend
        working-directory: ./backend
        run: npm run build

      - name: Run backend tests
        working-directory: ./backend
        run: |
          npm run test:unit
          npm run test:integration

  frontend-tests:
    name: Frontend Tests
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json

      - name: Install frontend dependencies
        working-directory: ./frontend
        run: npm ci --prefer-offline --no-audit --legacy-peer-deps

      - name: Create frontend .env file
        working-directory: ./frontend
        run: echo "VITE_API_URL=http://localhost:3001" > .env

      - name: Build frontend
        working-directory: ./frontend
        run: |
          echo "VITE_API_URL=" > .env
          echo "VITE_APP_NAME=ShopMefy" >> .env
          echo "VITE_APP_VERSION=1.0.0" >> .env
          echo "VITE_DEV_MODE=false" >> .env
          npm run build

      - name: Run frontend tests
        working-directory: ./frontend
        run: npm run test:unit

  code-quality:
    name: Code Quality
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install dependencies
        run: |
          cd backend && npm ci --prefer-offline --no-audit --legacy-peer-deps
          cd ../frontend && npm ci --prefer-offline --no-audit --legacy-peer-deps

      - name: TypeScript Check - Backend
        working-directory: ./backend
        run: npx tsc --noEmit

      - name: TypeScript Check - Frontend
        working-directory: ./frontend
        run: npx tsc --noEmit

      - name: Lint Backend
        working-directory: ./backend
        run: npm run lint || echo "Linting completed with warnings"

      - name: Lint Frontend
        working-directory: ./frontend
        run: npm run lint || echo "Linting completed with warnings" 