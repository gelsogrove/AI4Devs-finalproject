# ⏸️ Pause AWS Infrastructure for ShopMefy
# This workflow hibernates EC2 and pauses RDS to save costs
# - EC2: Hibernation (IP preserved)
# - RDS: Stop (endpoint preserved)
# - S3: Remains active (minimal cost)
# - Result: ~$1-2/month instead of ~$16-17/month

name: ⏸️ Pause Infrastructure

on:
  workflow_dispatch:

env:
  AWS_REGION: us-east-1

jobs:
  pause:
    name: ⏸️ Pause Infrastructure
    runs-on: ubuntu-latest
    environment: dev
    
    steps:
      - name: ⚙️ Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: ⏸️ Pause Infrastructure
        run: |
          echo "⏸️ Pausing ShopMefy infrastructure to save costs..."
          
          # Install AWS CLI if not available
          if ! command -v aws &> /dev/null; then
            echo "Installing AWS CLI..."
            curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
            unzip awscliv2.zip
            sudo ./aws/install
          fi
          
          # Set AWS region
          export AWS_DEFAULT_REGION=${{ env.AWS_REGION }}
          
          echo "🔍 Finding shopmefy resources to pause..."
          
          # Hibernate EC2 instances (preserves IP)
          echo "🖥️ Hibernating EC2 instances (IP preserved)..."
          INSTANCES=$(aws ec2 describe-instances --filters "Name=tag:Name,Values=shopmefy*" "Name=instance-state-name,Values=running" --query "Reservations[].Instances[].InstanceId" --output text)
          if [ ! -z "$INSTANCES" ]; then
            echo "Hibernating instances: $INSTANCES"
            for instance in $INSTANCES; do
              HIBERNATION_ENABLED=$(aws ec2 describe-instances --instance-ids $instance --query "Reservations[].Instances[].HibernationOptions.Configured" --output text)
              if [ "$HIBERNATION_ENABLED" = "True" ]; then
                echo "Hibernating instance $instance (IP will be preserved)"
                aws ec2 stop-instances --instance-ids $instance --hibernate
              else
                echo "Stopping instance $instance (hibernation not enabled, IP may change)"
                aws ec2 stop-instances --instance-ids $instance
              fi
            done
            echo "✅ EC2 instances paused successfully"
          else
            echo "ℹ️ No running EC2 instances found"
          fi
          
          # Stop RDS instances (endpoint preserved)
          echo "🗄️ Pausing RDS instances (endpoint preserved)..."
          RDS_INSTANCES=$(aws rds describe-db-instances --query "DBInstances[?starts_with(DBInstanceIdentifier, 'shopmefy') && DBInstanceStatus=='available'].DBInstanceIdentifier" --output text)
          for db in $RDS_INSTANCES; do
            if [ ! -z "$db" ]; then
              echo "Pausing RDS instance: $db"
              aws rds stop-db-instance --db-instance-identifier $db
              echo "✅ RDS instance $db paused successfully"
            fi
          done
          
          if [ -z "$RDS_INSTANCES" ]; then
            echo "ℹ️ No available RDS instances found to pause"
          fi
          
          echo ""
          echo "🎉 Infrastructure paused successfully!"
          echo "💰 Cost savings: EC2 and RDS instances are now paused"
          echo "📋 Infrastructure preserved: IP addresses and endpoints remain the same"
          echo "🚀 To resume: Use the 'Resume Infrastructure' workflow"
          echo ""
          echo "## ⏸️ Infrastructure Paused Successfully!" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### 💰 Cost Savings Activated:" >> $GITHUB_STEP_SUMMARY
          echo "- ✅ **EC2 instances hibernated** - No compute charges, IP preserved" >> $GITHUB_STEP_SUMMARY
          echo "- ✅ **RDS instances paused** - No database charges, endpoint preserved" >> $GITHUB_STEP_SUMMARY
          echo "- 🛡️ **All data preserved** - Configurations and data intact" >> $GITHUB_STEP_SUMMARY
          echo "- 🌐 **IP/Endpoints preserved** - No configuration changes needed" >> $GITHUB_STEP_SUMMARY
          echo "- 📦 **S3 buckets active** - Minimal storage costs only (~$1-2/month)" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### 🚀 To Resume Infrastructure:" >> $GITHUB_STEP_SUMMARY
          echo "1. Use the **Resume Infrastructure** workflow" >> $GITHUB_STEP_SUMMARY
          echo "2. All services will resume with same IP/endpoints" >> $GITHUB_STEP_SUMMARY
          echo "3. No configuration updates needed - everything stays the same" >> $GITHUB_STEP_SUMMARY 