name: CI

on:
  pull_request:
    branches: [main]
  workflow_dispatch:

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    env:
      S3_BUCKET_NAME: ${{ secrets.S3_BUCKET_NAME }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20

      - name: Install backend dependencies
        working-directory: ./backend
        run: npm install

      - name: Install frontend dependencies
        working-directory: ./frontend
        run: npm install

      - name: Build backend
        working-directory: ./backend
        run: npm run build

      - name: Build frontend
        working-directory: ./frontend
        run: npm run build

      - name: Run backend unit tests
        working-directory: ./backend
        run: npm run test:unit

      - name: Set up Docker Compose
        run: docker compose up -d

      - name: Wait for database
        run: |
          for i in {1..30}; do
            nc -z localhost 5432 && echo "DB is up" && exit 0
            sleep 2
          done
          echo "DB did not start in time" && exit 1

      - name: Run Prisma migrations
        working-directory: ./backend
        run: npx prisma migrate deploy

      - name: Start backend
        working-directory: ./backend
        run: nohup npm start -- --port 8080 &

      - name: Wait for backend
        run: |
          for i in {1..30}; do
            curl -s http://localhost:8080/api/health && exit 0
            sleep 2
          done
          echo "Backend did not start in time" && exit 1

      - name: Start frontend
        working-directory: ./frontend
        run: nohup npm start &

      - name: Wait for frontend
        run: |
          for i in {1..30}; do
            curl -s http://localhost:3000 && exit 0
            sleep 2
          done
          echo "Frontend did not start in time" && exit 1


      - name: Run backend integration tests
        working-directory: ./backend
        run: npm run test:integration

      - name: Run Cypress E2E tests
        working-directory: ./frontend
        run: npm run test:e2e

      - name: Upload backend to S3
        if: success()
        run: aws s3 cp ./backend s3://$S3_BUCKET_NAME/backend --recursive

      - name: Upload frontend to S3
        if: success()
        run: aws s3 cp ./frontend/dist s3://$S3_BUCKET_NAME/frontend --recursive 