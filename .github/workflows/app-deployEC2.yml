# 📦 Upload ShopMefy Application to S3
# 
# REQUIRED GITHUB SECRETS:
# - AWS_ACCESS_KEY_ID: AWS access key for S3 upload
# - AWS_SECRET_ACCESS_KEY: AWS secret key for S3 upload
# - AWS_S3_BUCKET: shopmefy-deployments-9e11c04f
#
# CURRENT INFRASTRUCTURE:
# - S3 Bucket: shopmefy-deployments-9e11c04f

name: 📦 CI - Upload to S3

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Deployment Environment'
        required: true
        default: 'dev'
        type: choice
        options:
          - dev
  # Auto-deploy after successful CI/CD on main branch
  workflow_run:
    workflows: ["🧪 CI - Test & Build Code"]
    types:
      - completed
    branches:
      - main

env:
  AWS_REGION: us-east-1

jobs:
  upload:
    name: 📦 Upload to S3
    runs-on: ubuntu-latest
    environment: dev
    # Only run if CI/CD was successful or if manually triggered
    if: |
      github.event_name == 'workflow_dispatch' || 
      (github.event_name == 'workflow_run' && github.event.workflow_run.conclusion == 'success')
    
    steps:
      - name: 📥 Checkout Repository
        uses: actions/checkout@v4

      - name: 🎯 Set Environment
        run: |
          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            echo "UPLOAD_ENV=${{ github.event.inputs.environment }}" >> $GITHUB_ENV
            echo "Manual upload to ${{ github.event.inputs.environment }}"
          else
            echo "UPLOAD_ENV=dev" >> $GITHUB_ENV
            echo "Auto upload to dev after successful CI/CD"
          fi

      - name: ⚙️ Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: 🔧 Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: 📥 Download Backend Build Artifacts
        if: github.event_name == 'workflow_run'
        uses: actions/download-artifact@v4
        with:
          name: backend-build
          path: ./backend
          github-token: ${{ secrets.GITHUB_TOKEN }}
          repository: ${{ github.repository }}
          run-id: ${{ github.event.workflow_run.id }}

      - name: 📥 Download Frontend Build Artifacts
        if: github.event_name == 'workflow_run'
        uses: actions/download-artifact@v4
        with:
          name: frontend-build
          path: ./frontend
          github-token: ${{ secrets.GITHUB_TOKEN }}
          repository: ${{ github.repository }}
          run-id: ${{ github.event.workflow_run.id }}

      - name: 📦 Install Backend Dependencies (Manual Upload Only)
        if: github.event_name == 'workflow_dispatch'
        working-directory: ./backend
        run: |
          npm ci
          npm list @types/multer @types/morgan @types/bcrypt @types/jsonwebtoken @types/fs-extra @types/pdf-parse || echo "Some @types packages missing"

      - name: 🏗️ Build Backend (Manual Upload Only)
        if: github.event_name == 'workflow_dispatch'
        working-directory: ./backend
        run: npm run build

      - name: 📦 Install Frontend Dependencies (Manual Upload Only)
        if: github.event_name == 'workflow_dispatch'
        working-directory: ./frontend
        run: npm ci

      - name: 🏗️ Build Frontend (Manual Upload Only)
        if: github.event_name == 'workflow_dispatch'
        working-directory: ./frontend
        run: npm run build



      - name: 📦 Generate ZIP Archives
        run: |
          echo "Generating ZIP archives using script..."
          chmod +x scripts/generate-zip-archives.sh
          ./scripts/generate-zip-archives.sh
          ls -la *.zip

      - name: 📤 Upload Archives to S3
        run: |
          echo "Uploading backend.zip to S3..."
          aws s3 cp backend.zip s3://${{ secrets.AWS_S3_BUCKET }}/deployments/backend.zip
          
          echo "Uploading frontend.zip to S3..."
          aws s3 cp frontend.zip s3://${{ secrets.AWS_S3_BUCKET }}/deployments/frontend.zip
          
          echo "✅ Upload to S3 completed successfully!"
          echo "📦 Backend: s3://${{ secrets.AWS_S3_BUCKET }}/deployments/backend.zip"
          echo "📦 Frontend: s3://${{ secrets.AWS_S3_BUCKET }}/deployments/frontend.zip"



      - name: 🧹 Cleanup
        if: always()
        run: |
          rm -f backend.zip frontend.zip

      - name: 📊 Upload Summary
        run: |
          echo "## 🎉 Upload to S3 Completed Successfully!" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### 📋 Upload Details:" >> $GITHUB_STEP_SUMMARY
          echo "- **Environment**: ${{ env.UPLOAD_ENV }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Trigger**: ${{ github.event_name == 'workflow_dispatch' && 'Manual' || 'Automatic (after CI/CD)' }}" >> $GITHUB_STEP_SUMMARY
          echo "- **S3 Bucket**: ${{ secrets.AWS_S3_BUCKET }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Upload Method**: AWS S3" >> $GITHUB_STEP_SUMMARY
          echo "- **Upload Time**: $(date)" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### 📦 Uploaded Files:" >> $GITHUB_STEP_SUMMARY
          echo "- **Backend**: s3://${{ secrets.AWS_S3_BUCKET }}/deployments/backend.zip" >> $GITHUB_STEP_SUMMARY
          echo "- **Frontend**: s3://${{ secrets.AWS_S3_BUCKET }}/deployments/frontend.zip" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### 🔗 Next Steps:" >> $GITHUB_STEP_SUMMARY
          echo "- Files are ready for deployment to EC2 instance" >> $GITHUB_STEP_SUMMARY
          echo "- EC2 can download from S3 and deploy" >> $GITHUB_STEP_SUMMARY 