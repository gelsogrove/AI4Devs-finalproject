name: 📦 02 - BUILD - Download Artifacts and Upload to S3

on:
  workflow_run:
    workflows: ["🧪 CI - Continuous Integration"]
    types:
      - completed
    branches: [main]
  workflow_dispatch:
    inputs:
      environment:
        description: 'Build Environment'
        required: true
        default: 'dev'
        type: choice
        options:
          - dev

env:
  AWS_REGION: us-east-1

jobs:
  download-and-upload:
    name: 📦 Download Artifacts and Upload to S3
    runs-on: ubuntu-latest
    environment: dev
    if: (github.event.workflow_run.conclusion == 'success' && github.event.workflow_run.head_branch == 'main') || github.event_name == 'workflow_dispatch'
    
    steps:
      - name: 🔄 Checkout Code (for deployment info)
        uses: actions/checkout@v4

      - name: 🎯 Set Environment Variables
        run: |
          echo "BUILD_VERSION=build-$(date +%Y%m%d-%H%M%S)-$(echo $GITHUB_SHA | cut -c1-8)" >> $GITHUB_ENV
          echo "🏷️ Build version: build-$(date +%Y%m%d-%H%M%S)-$(echo $GITHUB_SHA | cut -c1-8)"
          
          if [ "${{ github.event_name }}" = "workflow_run" ]; then
            echo "WORKFLOW_RUN_ID=${{ github.event.workflow_run.id }}" >> $GITHUB_ENV
            echo "📋 Using workflow run ID: ${{ github.event.workflow_run.id }}"
          else
            echo "WORKFLOW_RUN_ID=${{ github.run_id }}" >> $GITHUB_ENV
            echo "📋 Using current run ID: ${{ github.run_id }}"
          fi

      - name: ⚙️ Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: 🔍 Check Available Artifacts
        run: |
          echo "🔍 Checking available artifacts for workflow run: ${{ env.WORKFLOW_RUN_ID }}"
          
          # List artifacts using GitHub API
          curl -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
               -H "Accept: application/vnd.github.v3+json" \
               "https://api.github.com/repos/${{ github.repository }}/actions/runs/${{ env.WORKFLOW_RUN_ID }}/artifacts" \
               | jq '.artifacts[] | {name: .name, expired: .expired, created_at: .created_at}'

      - name: 📥 Download Backend Build Artifacts
        uses: actions/download-artifact@v4
        with:
          name: backend-build
          path: ./backend-artifacts
          github-token: ${{ secrets.GITHUB_TOKEN }}
          run-id: ${{ env.WORKFLOW_RUN_ID }}
        continue-on-error: true
        id: download-backend

      - name: 📥 Download Frontend Build Artifacts
        uses: actions/download-artifact@v4
        with:
          name: frontend-build
          path: ./frontend-artifacts
          github-token: ${{ secrets.GITHUB_TOKEN }}
          run-id: ${{ env.WORKFLOW_RUN_ID }}
        continue-on-error: true
        id: download-frontend

      - name: ✅ Verify Downloads
        run: |
          echo "🔍 Verifying artifact downloads..."
          
          if [ "${{ steps.download-backend.outcome }}" = "success" ]; then
            echo "✅ Backend artifacts downloaded successfully"
            ls -la ./backend-artifacts/
          else
            echo "❌ Backend artifacts download failed"
            exit 1
          fi
          
          if [ "${{ steps.download-frontend.outcome }}" = "success" ]; then
            echo "✅ Frontend artifacts downloaded successfully"
            ls -la ./frontend-artifacts/
          else
            echo "❌ Frontend artifacts download failed"
            exit 1
          fi

      - name: 📦 Package Deployment Artifacts
        run: |
          echo "📦 Creating deployment package from downloaded artifacts..."
          
          # Create deployment structure
          mkdir -p deployment/backend
          mkdir -p deployment/frontend
          
          # Copy backend artifacts
          cp -r backend-artifacts/* deployment/backend/
          
          # Copy frontend artifacts
          cp -r frontend-artifacts/* deployment/frontend/
          
          # Create deployment info
          cat > deployment/deployment-info.json << EOF
          {
            "version": "${{ env.BUILD_VERSION }}",
            "timestamp": "$(date -u +%Y-%m-%dT%H:%M:%SZ)",
            "commit": "$GITHUB_SHA",
            "branch": "$GITHUB_REF_NAME",
            "environment": "${{ github.event.inputs.environment || 'dev' }}",
            "source": "artifacts-from-ci",
            "workflow_run_id": "${{ env.WORKFLOW_RUN_ID }}"
          }
          EOF
          
          # Create archive
          echo "🗜️ Creating deployment archive..."
          tar -czf deployment.tar.gz -C deployment .
          
          echo "📊 Package created: $(du -sh deployment.tar.gz)"
          echo "📋 Contents:"
          tar -tzf deployment.tar.gz | head -20

      - name: ☁️ Upload Build to S3
        run: |
          echo "☁️ Uploading build artifacts to S3..."
          
          # Upload versioned build
          aws s3 cp deployment.tar.gz "s3://${{ secrets.AWS_S3_BUCKET }}/deployments/${{ env.BUILD_VERSION }}.tar.gz"
          
          # Upload as latest
          aws s3 cp deployment.tar.gz "s3://${{ secrets.AWS_S3_BUCKET }}/deployments/latest.tar.gz"
          
          # Upload deployment info
          aws s3 cp deployment/deployment-info.json "s3://${{ secrets.AWS_S3_BUCKET }}/deployments/${{ env.BUILD_VERSION }}-info.json"
          aws s3 cp deployment/deployment-info.json "s3://${{ secrets.AWS_S3_BUCKET }}/deployments/latest-info.json"
          
          echo "✅ Upload completed to S3!"

      - name: 📊 Build Summary
        run: |
          echo "## 📦 Build Package Created!" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### 📋 Build Details:" >> $GITHUB_STEP_SUMMARY
          echo "- **Version**: ${{ env.BUILD_VERSION }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Commit**: $GITHUB_SHA" >> $GITHUB_STEP_SUMMARY
          echo "- **Branch**: $GITHUB_REF_NAME" >> $GITHUB_STEP_SUMMARY
          echo "- **Environment**: ${{ github.event.inputs.environment || 'dev' }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Source**: Downloaded from CI artifacts (Run ID: ${{ env.WORKFLOW_RUN_ID }})" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### 📦 S3 Artifacts:" >> $GITHUB_STEP_SUMMARY
          echo "- **Versioned**: \`s3://${{ secrets.AWS_S3_BUCKET }}/deployments/${{ env.BUILD_VERSION }}.tar.gz\`" >> $GITHUB_STEP_SUMMARY
          echo "- **Latest**: \`s3://${{ secrets.AWS_S3_BUCKET }}/deployments/latest.tar.gz\`" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### 🚀 Ready for Deployment:" >> $GITHUB_STEP_SUMMARY
          echo "Use the **DEPLOY** workflow to deploy this build to EC2." >> $GITHUB_STEP_SUMMARY